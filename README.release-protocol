0. Build with no GCC warnings

1. Unit tests

2. 24-hour memory leak test, using stress test driver client

	a. Run dmapd in GDB

	b. Run stress test driver client for 24 hours

3. Valgrind using test driver client

	a. Run dmapd in "valgrind --leak-check=full --num-callers=100"

	b. Run stress test driver client for 5 minutes (kill with TERM)

	c. Review results

4. Test and record memory use (needs work)

	a. Run dmapd using GHashTable and BDB modules

	b. Measure memory use using "top -b" and heap by looking at /proc/PID/maps

	c. Record measurements (where?)

5. Bump version number:

	a. Update configure.ac

	b. git diff, confirm changes

	c. git commit -a -s -m "Bump version number"

	d. git tag -s DMAPD_X_Y_Z -m "Tag for X.Y.Z release"

	e. git push / git push --tags

	f. Publish tarball (./autogen.sh --enable-gtk-doc --disable-maintainer-mode && make dist)

NOTE: stress test driver

	1. Lists available shares

	2. User chooses share

	3. Iterates through all protocol requests, request each database
	item and some invalid items

Tests that could be automated:

	Handle invalid cache blob without problem

	Don't thumbnail progressive image

	Read EXIF thumbnail

	Further shrink EXIF thumbnails that are too large

	Max thumbnail and other arguments work

	No permission on media file

	No permission on directory

	Don't load non-media into DB

	Don't try to transcode non-media or files we can't transcode (no 0-size transcode)

	Test each module

	Unit tests	
